Exercises

1. List the commands for adding, updating, and deleting data.
2. Explain the structure for each type of command.

A:(for question 1 & 2)
  CREATE TABLE (table name) ((column name) (datatype));
  INSERT INTO (table name) (column names) VALUES (values in column order);
  UPDATE (table name) SET (column name = value) WHERE (column name =,<,> value);
  DELETE FROM (table name) WHERE (column name =,<,> value);
  ALTER TABLE (table name) ADD COLUMN (column name) (datatype) SET DEFAULT (something);
  ALTER TABLE (table name) DROP COLUMN (column name);
  DROP TABLE (table name);

3. What are some of the data types that can be used in tables? Give a real-world example of each type.

A:
Text: Name of adress book contact
Interger: Phone number associated with contact
Date: Date contact was input in database
Timestamps: When information for contact was last updated

4. Decide how to create a new table to hold a list of people invited to a wedding dinner. The table needs to have first and last names, whether they sent in their RSVP, the number of guests they are bringing, and the number of meals (1 for adults and 1/2 for children).

)Which data type would you use to store each of the following pieces of information?
A:
First and last name. - text
Whether they sent in their RSVP. - boolean
Number of guests. - interger
Number of meals. - interger

)Write a command that creates the table to track the wedding dinner.

A:
CREATE TABLE wedding (
  firstname text,
  lastname text,
  guests integer,
  meals integer,
);

)Write a command that adds a column to track whether the guest sent a thank you card.

A:
ALTER TABLE wedding
ADD COLUMN thanked boolean
SET DEFAULT FALSE;

)You have decided to move the data about the meals to another table, so write a command to remove the column storing the number meals from the wedding table.

A:
ALTER TABLE wedding
DROP COLUMN meals;

)The guests will need a place to sit at the reception, so write a command that adds a column for table number.

A:
ALTER TABLE wedding
ADD COLUMN tablenumber integer;

)The wedding is over and we do not need to keep this information, so write a command that deletes the table numbers from the database.

A:
ALTER TABLE wedding
DROP COLUMN tablenumber;
5. Write a command to create a new table to hold the books in a library with the columns ISBN, title, author, genre, publishing date, number of copies, and available copies.

A:
CREATE TABLE books (
  ISBN integer,
  title text,
  author text,
  genre text,
  published date,
  copiestotal integer,
  copiesavail integer,
);

)Find three books and add their information to the table.

A:
INSERT INTO books (ISBN, title, author, genre, published, copiestotal, copiesavail)
  VALUES
  (9780062255655, 'The Ocean at the End of the Lane', 'Neil Gaiman', 'Dark fantasy', DATE '2013-06-18', 1, 1),
  (0544174224, 'The Hobbit: Illustrated Edition', 'J.R.R. Tolkien', 'Fantasy', 'October 1, 2013', 1, 1),
  (0553103547 , 'A Game of Thrones', 'George R. R. Martin', 'Epic fantasy', DATE '1996-08-01', 1, 1);

)Someone has just checked out one of the books. Change the number of available copies to 1 fewer.

A:
UPDATE books
  SET copiesavail = copiesavail -1
  WHERE ISBN = 0544174224;

)Now one of the books has been added to the banned books list. Remove it from the table.

A:
DELETE FROm books
  WHERE ISBN = 9780062255655;

6. Write a command to make a new table to hold spacecrafts. Information should include id, name, year launched, country of origin, a brief description of the mission, orbiting body, if it is currently operating, and its approximate miles from Earth. In addition to the table creation, provide commands that perform the following operations:

A:
CREATE TABLE spacecrafts (
  id integer,
  name text,
  launched integer,
  origin text,
  mission text,
  orbiting text,
  operating boolean,
  proximity interger
);

)Add three non-Earth-orbiting satellites to the table.

A:
INSERT INTO spacecrafts (id, name, launched, origin, mission, orbiting, operating, proximity)
  VALUES
  (1, '2001 Mars Odyssey', 2001, 'USA', 'Map the surface of Mars', 'Mars', TRUE, 33900000),
  (2, 'The Bebop', 1998, 'Japan', 'Hunt Bounties', 'Mars', FALSE, 96846274371629),
  (3, 'Millennium Falcon', 2065, 'Japan', 'Travelling to planet Kessel in under 14 parsecs', 'Kessel', TRUE, 13500000000.6);
  
)Remove one of the satellites from the table since it has just crashed into the planet.

A:
DELETE FROM spacecrafts
  WHERE id = 3;

)Edit another satellite because it is no longer operating and change the value to reflect that.

A:
UPDATE spacecrafts
  SET operating = !operating
  WHERE id = 1;

7. Write a command to create a new table to hold the emails in your inbox. This table should include an id, the subject line, the sender, any additional recipients, the body of the email, the timestamp, whether or not you have read the email, and the id of the email chain it's in. Also provide commands that perform the following operations:

A:
CREATE TABLE inbox (
  id integer,
  subject text,
  sender text,
  recipients text[],
  body text,
  timestamp timestamp,
  read boolean,
  chainid interger
);

)Add three new emails to the inbox.

A:
INSERT INTO inbox (id, subject, sender, recipients, body, timestamp, is_read, chainid)
  VALUES
  (11111, 'Test email 1', 'sender1@gmail.com', {'recipient1@yahoo.com'}, 'This is a test email.', TIMESTAMP '2019-06-12 15:01:13', FALSE, 12345),
  (22222, 'Test email 2', 'sender2@gmail.com', {'recipient2@hotmail.com', 'recipient3@yahoo.com'}, 'This is another test email.', TIMESTAMP '2019-06-12 15:02:03', FALSE, 23456),
  (33333, 'Test email 3', 'sender3@gmail.com', {'recipient4@aol.com'}, 'Again, this is test email. Sincerely, Adam.', TIMESTAMP '2019-06-12 15:03:45', FALSE, 34567);


)You deleted one of the emails, so write a command to remove the row from the inbox table.

A:
DELETE FROM inbox
  WHERE id = 33333

)You started reading an email but just heard a crash in another room. Mark the email as unread before investigating the crash, so you can come back and read it later.

A:
UPDATE inbox
  SET read = FALSE
  WHERE id = 11111;